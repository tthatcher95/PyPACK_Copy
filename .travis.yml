language: generic

env:
  - PYTHON_VERSION=3.5
  - PYTHON_VERSION=3.6
  - PYTHON_VERSION=3.7
os:
  - linux
  - osx

jobs:
  allow_failures:
    - os: osx

branches:
  - master

services:
  - docker

before_install:
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    else
      curl -o miniconda.sh https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh;
    fi
  # More conda setup to get miniconda in and a virtual env. setup
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda info -a   # Useful for debugging any issues with conda
  # Create the env

install:
  # Install dependencies
  - conda config --add channels tthatcher95
  - conda config --add channels conda-forge
  - conda env create -q -f environment.yml --name test_env python=$PYTHON_VERSION
  - source activate test_env
  # Development installation
  - conda install pip setuptools
  - conda install --quiet pytest pytest-cov nbsphinx
  - pip install coveralls travis-sphinx


script:
  - pytest --cov=libpypack

after_success:
  # Code Coverage
  - coveralls
  # Anaconda Upload
  - conda deactivate
  - conda install conda-build anaconda-client
  - conda config --set anaconda_upload no
  - conda build recipe -q
  - builddir=(`conda build recipe --output`)
  - echo $CONDA_UPLOAD_TOKEN
  - echo $DUMMY_TOKEN
  - |
    if [ "$TRAVIS_BRANCH" = "master" -a "$TRAVIS_PULL_REQUEST" = "false" ]; then
        anaconda -t=$CONDA_UPLOAD_TOKEN upload $builddir --force;
    fi
  # # Docs to gh-pages
  # - source activate test_env  # Reactivate the env to have all deps installed.
  # - travis-sphinx build --source=docs --nowarn # The sphinx build script
  # - travis-sphinx deploy --branches=master
